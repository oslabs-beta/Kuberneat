"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/Home/[Views]/Pods/page",{

/***/ "(app-pages-browser)/./src/components/Pods/PodView.tsx":
/*!*****************************************!*\
  !*** ./src/components/Pods/PodView.tsx ***!
  \*****************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n/**\n * Renders the PodsView component.\n *\n * @return {JSX.Element} The rendered PodsView component.\n */ \nconst PodsView = ()=>{\n    _s();\n    const [nodes, setNodes] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    //fetching to the backend\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        //Hard coded data of the nodes from K8s -Need to dynamically render this out \n        fetch(\"/cluster\", {\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        }).then((data)=>data.json()).then((data)=>{\n            // iterate through our array response from the server\n            for(let i = 0; i < data.Name.length; i++){\n                // setting state containing our array of objects containing our cluster info\n                setNodes((oldArray)=>[\n                        ...oldArray,\n                        {\n                            Namespace: data.Namespace[i],\n                            Name: data.Name[i],\n                            CPU_Requests: data.CPU_Requests[i],\n                            CPU_Limits: data.CPU_Limits[i],\n                            Memory_Requests: data.Memory_Requests[i],\n                            Memory_Limits: data.Memory_Limits[i],\n                            Age: data.Age[i]\n                        }\n                    ]);\n            }\n        }).catch((err)=>console.log(\"Fetch Error: \", err));\n    ///create variable to store the values from the\n    }, []);\n    //creating an array to store the props for the Pod2 component\n    const podProps = [];\n    //looping through the nodes and passing down props to the Pod2 component\n    for(let i = 0; i < nodes.length; i++){\n        podProps.push(/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(AllPods, {\n            id: i,\n            info: nodes[i],\n            nodeNum: i\n        }, i, false, {\n            fileName: \"/Users/croissants/Desktop/Kuberneat/Kuberneat-next-app/src/components/Pods/PodView.tsx\",\n            lineNumber: 45,\n            columnNumber: 17\n        }, undefined));\n    }\n    //use context for light and dark mode\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        children: podProps\n    }, void 0, false, {\n        fileName: \"/Users/croissants/Desktop/Kuberneat/Kuberneat-next-app/src/components/Pods/PodView.tsx\",\n        lineNumber: 51,\n        columnNumber: 3\n    }, undefined);\n};\n_s(PodsView, \"PbTFKmE3ANQd50N7lqnMXthrMF4=\");\n_c = PodsView;\n/* harmony default export */ __webpack_exports__[\"default\"] = (PodsView);\nvar _c;\n$RefreshReg$(_c, \"PodsView\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9jb21wb25lbnRzL1BvZHMvUG9kVmlldy50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQ0E7Ozs7Q0FJQyxHQUNrRDtBQUduRCxNQUFNRyxXQUFXOztJQUNmLE1BQU0sQ0FBQ0MsT0FBT0MsU0FBUyxHQUFpQkosK0NBQVFBLENBQUMsRUFBRTtJQUVwRCx5QkFBeUI7SUFDekJDLGdEQUFTQSxDQUFDO1FBQ1QsNkVBQTZFO1FBQzdFSSxNQUFNLFlBQVk7WUFBRUMsU0FBUztnQkFBRSxnQkFBZ0I7WUFBbUI7UUFBRSxHQUNuRUMsSUFBSSxDQUFDLENBQUNDLE9BQVNBLEtBQUtDLElBQUksSUFDeEJGLElBQUksQ0FBQyxDQUFDQztZQUNMLHFEQUFxRDtZQUNyRCxJQUFLLElBQUlFLElBQUksR0FBR0EsSUFBSUYsS0FBS0csSUFBSSxDQUFDQyxNQUFNLEVBQUVGLElBQUs7Z0JBQ3pDLDRFQUE0RTtnQkFDNUVOLFNBQVMsQ0FBQ1MsV0FBb0I7MkJBQ3pCQTt3QkFDSDs0QkFDRUMsV0FBV04sS0FBS00sU0FBUyxDQUFDSixFQUFFOzRCQUM1QkMsTUFBTUgsS0FBS0csSUFBSSxDQUFDRCxFQUFFOzRCQUNsQkssY0FBY1AsS0FBS08sWUFBWSxDQUFDTCxFQUFFOzRCQUNsQ00sWUFBWVIsS0FBS1EsVUFBVSxDQUFDTixFQUFFOzRCQUM5Qk8saUJBQWlCVCxLQUFLUyxlQUFlLENBQUNQLEVBQUU7NEJBQ3hDUSxlQUFlVixLQUFLVSxhQUFhLENBQUNSLEVBQUU7NEJBQ3BDUyxLQUFLWCxLQUFLVyxHQUFHLENBQUNULEVBQUU7d0JBQ2xCO3FCQUNEO1lBQ0g7UUFDRixHQUNDVSxLQUFLLENBQUMsQ0FBQ0MsTUFBUUMsUUFBUUMsR0FBRyxDQUFDLGlCQUFpQkY7SUFDN0MsK0NBQStDO0lBQ2pELEdBQUcsRUFBRTtJQUVMLDZEQUE2RDtJQUM3RCxNQUFNRyxXQUFrQixFQUFFO0lBRTFCLHdFQUF3RTtJQUN4RSxJQUFLLElBQUlkLElBQUksR0FBR0EsSUFBSVAsTUFBTVMsTUFBTSxFQUFFRixJQUFLO1FBQ3JDYyxTQUFTQyxJQUFJLGVBQUMsOERBQUNDO1lBQVFDLElBQUlqQjtZQUFHa0IsTUFBTXpCLEtBQUssQ0FBQ08sRUFBRTtZQUFVbUIsU0FBU25CO1dBQVpBOzs7OztJQUNyRDtJQUNBLHFDQUFxQztJQUdyQyxxQkFDRSw4REFBQ29CO2tCQUNJTjs7Ozs7O0FBR1A7R0E3Q010QjtLQUFBQTtBQStDTiwrREFBZUEsUUFBUUEsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvY29tcG9uZW50cy9Qb2RzL1BvZFZpZXcudHN4P2VlZmMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2UgY2xpZW50XCI7XG4vKipcbiAqIFJlbmRlcnMgdGhlIFBvZHNWaWV3IGNvbXBvbmVudC5cbiAqXG4gKiBAcmV0dXJuIHtKU1guRWxlbWVudH0gVGhlIHJlbmRlcmVkIFBvZHNWaWV3IGNvbXBvbmVudC5cbiAqL1xuaW1wb3J0IFJlYWN0LCB7IHVzZVN0YXRlLCB1c2VFZmZlY3QgfSBmcm9tICdyZWFjdCc7XG5cblxuY29uc3QgUG9kc1ZpZXcgPSAoKSA9PiB7XG4gIGNvbnN0IFtub2Rlcywgc2V0Tm9kZXNdOiBhbnlbXSB8IG51bGwgPSB1c2VTdGF0ZShbXSk7XG5cbiAvL2ZldGNoaW5nIHRvIHRoZSBiYWNrZW5kXG4gdXNlRWZmZWN0KCgpID0+IHtcbiAgLy9IYXJkIGNvZGVkIGRhdGEgb2YgdGhlIG5vZGVzIGZyb20gSzhzIC1OZWVkIHRvIGR5bmFtaWNhbGx5IHJlbmRlciB0aGlzIG91dCBcbiAgZmV0Y2goJy9jbHVzdGVyJywgeyBoZWFkZXJzOiB7ICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicgfSB9KVxuICAudGhlbigoZGF0YSkgPT4gZGF0YS5qc29uKCkpXG4gIC50aGVuKChkYXRhKSA9PiB7XG4gICAgLy8gaXRlcmF0ZSB0aHJvdWdoIG91ciBhcnJheSByZXNwb25zZSBmcm9tIHRoZSBzZXJ2ZXJcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGRhdGEuTmFtZS5sZW5ndGg7IGkrKykge1xuICAgICAgLy8gc2V0dGluZyBzdGF0ZSBjb250YWluaW5nIG91ciBhcnJheSBvZiBvYmplY3RzIGNvbnRhaW5pbmcgb3VyIGNsdXN0ZXIgaW5mb1xuICAgICAgc2V0Tm9kZXMoKG9sZEFycmF5IDoge31bXSkgPT4gW1xuICAgICAgICAuLi5vbGRBcnJheSxcbiAgICAgICAge1xuICAgICAgICAgIE5hbWVzcGFjZTogZGF0YS5OYW1lc3BhY2VbaV0sXG4gICAgICAgICAgTmFtZTogZGF0YS5OYW1lW2ldLFxuICAgICAgICAgIENQVV9SZXF1ZXN0czogZGF0YS5DUFVfUmVxdWVzdHNbaV0sXG4gICAgICAgICAgQ1BVX0xpbWl0czogZGF0YS5DUFVfTGltaXRzW2ldLFxuICAgICAgICAgIE1lbW9yeV9SZXF1ZXN0czogZGF0YS5NZW1vcnlfUmVxdWVzdHNbaV0sXG4gICAgICAgICAgTWVtb3J5X0xpbWl0czogZGF0YS5NZW1vcnlfTGltaXRzW2ldLFxuICAgICAgICAgIEFnZTogZGF0YS5BZ2VbaV0sXG4gICAgICAgIH0sXG4gICAgICBdKTtcbiAgICB9XG4gIH0pXG4gIC5jYXRjaCgoZXJyKSA9PiBjb25zb2xlLmxvZygnRmV0Y2ggRXJyb3I6ICcsIGVycikpO1xuICAvLy9jcmVhdGUgdmFyaWFibGUgdG8gc3RvcmUgdGhlIHZhbHVlcyBmcm9tIHRoZVxufSwgW10pO1xuXG4vL2NyZWF0aW5nIGFuIGFycmF5IHRvIHN0b3JlIHRoZSBwcm9wcyBmb3IgdGhlIFBvZDIgY29tcG9uZW50XG5jb25zdCBwb2RQcm9wczogYW55W10gPSBbXTtcblxuLy9sb29waW5nIHRocm91Z2ggdGhlIG5vZGVzIGFuZCBwYXNzaW5nIGRvd24gcHJvcHMgdG8gdGhlIFBvZDIgY29tcG9uZW50XG5mb3IgKGxldCBpID0gMDsgaSA8IG5vZGVzLmxlbmd0aDsgaSsrKSB7XG4gIHBvZFByb3BzLnB1c2goPEFsbFBvZHMgaWQ9e2l9IGluZm89e25vZGVzW2ldfSBrZXk9e2l9IG5vZGVOdW09e2l9IC8+KTtcbn1cbi8vdXNlIGNvbnRleHQgZm9yIGxpZ2h0IGFuZCBkYXJrIG1vZGVcblxuXG5yZXR1cm4gKFxuICA8ZGl2ID5cbiAgICAgIHtwb2RQcm9wc31cbiAgPC9kaXY+XG4pXG59O1xuXG5leHBvcnQgZGVmYXVsdCBQb2RzVmlldzsiXSwibmFtZXMiOlsiUmVhY3QiLCJ1c2VTdGF0ZSIsInVzZUVmZmVjdCIsIlBvZHNWaWV3Iiwibm9kZXMiLCJzZXROb2RlcyIsImZldGNoIiwiaGVhZGVycyIsInRoZW4iLCJkYXRhIiwianNvbiIsImkiLCJOYW1lIiwibGVuZ3RoIiwib2xkQXJyYXkiLCJOYW1lc3BhY2UiLCJDUFVfUmVxdWVzdHMiLCJDUFVfTGltaXRzIiwiTWVtb3J5X1JlcXVlc3RzIiwiTWVtb3J5X0xpbWl0cyIsIkFnZSIsImNhdGNoIiwiZXJyIiwiY29uc29sZSIsImxvZyIsInBvZFByb3BzIiwicHVzaCIsIkFsbFBvZHMiLCJpZCIsImluZm8iLCJub2RlTnVtIiwiZGl2Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/Pods/PodView.tsx\n"));

/***/ })

});