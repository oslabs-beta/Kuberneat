"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/d3-brush";
exports.ids = ["vendor-chunks/d3-brush"];
exports.modules = {

/***/ "(ssr)/./node_modules/d3-brush/src/brush.js":
/*!********************************************!*\
  !*** ./node_modules/d3-brush/src/brush.js ***!
  \********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   brushSelection: () => (/* binding */ brushSelection),\n/* harmony export */   brushX: () => (/* binding */ brushX),\n/* harmony export */   brushY: () => (/* binding */ brushY),\n/* harmony export */   \"default\": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var d3_dispatch__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! d3-dispatch */ \"(ssr)/./node_modules/d3-dispatch/src/dispatch.js\");\n/* harmony import */ var d3_drag__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! d3-drag */ \"(ssr)/./node_modules/d3-drag/src/nodrag.js\");\n/* harmony import */ var d3_interpolate__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! d3-interpolate */ \"(ssr)/./node_modules/d3-interpolate/src/value.js\");\n/* harmony import */ var d3_selection__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! d3-selection */ \"(ssr)/./node_modules/d3-selection/src/select.js\");\n/* harmony import */ var d3_selection__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! d3-selection */ \"(ssr)/./node_modules/d3-selection/src/pointer.js\");\n/* harmony import */ var d3_transition__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-transition */ \"(ssr)/./node_modules/d3-transition/src/index.js\");\n/* harmony import */ var _constant_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constant.js */ \"(ssr)/./node_modules/d3-brush/src/constant.js\");\n/* harmony import */ var _event_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./event.js */ \"(ssr)/./node_modules/d3-brush/src/event.js\");\n/* harmony import */ var _noevent_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./noevent.js */ \"(ssr)/./node_modules/d3-brush/src/noevent.js\");\n\n\n\n\n\n\n\n\nvar MODE_DRAG = {\n    name: \"drag\"\n}, MODE_SPACE = {\n    name: \"space\"\n}, MODE_HANDLE = {\n    name: \"handle\"\n}, MODE_CENTER = {\n    name: \"center\"\n};\nconst { abs, max, min } = Math;\nfunction number1(e) {\n    return [\n        +e[0],\n        +e[1]\n    ];\n}\nfunction number2(e) {\n    return [\n        number1(e[0]),\n        number1(e[1])\n    ];\n}\nvar X = {\n    name: \"x\",\n    handles: [\n        \"w\",\n        \"e\"\n    ].map(type),\n    input: function(x, e) {\n        return x == null ? null : [\n            [\n                +x[0],\n                e[0][1]\n            ],\n            [\n                +x[1],\n                e[1][1]\n            ]\n        ];\n    },\n    output: function(xy) {\n        return xy && [\n            xy[0][0],\n            xy[1][0]\n        ];\n    }\n};\nvar Y = {\n    name: \"y\",\n    handles: [\n        \"n\",\n        \"s\"\n    ].map(type),\n    input: function(y, e) {\n        return y == null ? null : [\n            [\n                e[0][0],\n                +y[0]\n            ],\n            [\n                e[1][0],\n                +y[1]\n            ]\n        ];\n    },\n    output: function(xy) {\n        return xy && [\n            xy[0][1],\n            xy[1][1]\n        ];\n    }\n};\nvar XY = {\n    name: \"xy\",\n    handles: [\n        \"n\",\n        \"w\",\n        \"e\",\n        \"s\",\n        \"nw\",\n        \"ne\",\n        \"sw\",\n        \"se\"\n    ].map(type),\n    input: function(xy) {\n        return xy == null ? null : number2(xy);\n    },\n    output: function(xy) {\n        return xy;\n    }\n};\nvar cursors = {\n    overlay: \"crosshair\",\n    selection: \"move\",\n    n: \"ns-resize\",\n    e: \"ew-resize\",\n    s: \"ns-resize\",\n    w: \"ew-resize\",\n    nw: \"nwse-resize\",\n    ne: \"nesw-resize\",\n    se: \"nwse-resize\",\n    sw: \"nesw-resize\"\n};\nvar flipX = {\n    e: \"w\",\n    w: \"e\",\n    nw: \"ne\",\n    ne: \"nw\",\n    se: \"sw\",\n    sw: \"se\"\n};\nvar flipY = {\n    n: \"s\",\n    s: \"n\",\n    nw: \"sw\",\n    ne: \"se\",\n    se: \"ne\",\n    sw: \"nw\"\n};\nvar signsX = {\n    overlay: +1,\n    selection: +1,\n    n: null,\n    e: +1,\n    s: null,\n    w: -1,\n    nw: -1,\n    ne: +1,\n    se: +1,\n    sw: -1\n};\nvar signsY = {\n    overlay: +1,\n    selection: +1,\n    n: -1,\n    e: null,\n    s: +1,\n    w: null,\n    nw: -1,\n    ne: -1,\n    se: +1,\n    sw: +1\n};\nfunction type(t) {\n    return {\n        type: t\n    };\n}\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter(event) {\n    return !event.ctrlKey && !event.button;\n}\nfunction defaultExtent() {\n    var svg = this.ownerSVGElement || this;\n    if (svg.hasAttribute(\"viewBox\")) {\n        svg = svg.viewBox.baseVal;\n        return [\n            [\n                svg.x,\n                svg.y\n            ],\n            [\n                svg.x + svg.width,\n                svg.y + svg.height\n            ]\n        ];\n    }\n    return [\n        [\n            0,\n            0\n        ],\n        [\n            svg.width.baseVal.value,\n            svg.height.baseVal.value\n        ]\n    ];\n}\nfunction defaultTouchable() {\n    return navigator.maxTouchPoints || \"ontouchstart\" in this;\n}\n// Like d3.local, but with the name “__brush” rather than auto-generated.\nfunction local(node) {\n    while(!node.__brush)if (!(node = node.parentNode)) return;\n    return node.__brush;\n}\nfunction empty(extent) {\n    return extent[0][0] === extent[1][0] || extent[0][1] === extent[1][1];\n}\nfunction brushSelection(node) {\n    var state = node.__brush;\n    return state ? state.dim.output(state.selection) : null;\n}\nfunction brushX() {\n    return brush(X);\n}\nfunction brushY() {\n    return brush(Y);\n}\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__() {\n    return brush(XY);\n}\nfunction brush(dim) {\n    var extent = defaultExtent, filter = defaultFilter, touchable = defaultTouchable, keys = true, listeners = (0,d3_dispatch__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(\"start\", \"brush\", \"end\"), handleSize = 6, touchending;\n    function brush(group) {\n        var overlay = group.property(\"__brush\", initialize).selectAll(\".overlay\").data([\n            type(\"overlay\")\n        ]);\n        overlay.enter().append(\"rect\").attr(\"class\", \"overlay\").attr(\"pointer-events\", \"all\").attr(\"cursor\", cursors.overlay).merge(overlay).each(function() {\n            var extent = local(this).extent;\n            (0,d3_selection__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(this).attr(\"x\", extent[0][0]).attr(\"y\", extent[0][1]).attr(\"width\", extent[1][0] - extent[0][0]).attr(\"height\", extent[1][1] - extent[0][1]);\n        });\n        group.selectAll(\".selection\").data([\n            type(\"selection\")\n        ]).enter().append(\"rect\").attr(\"class\", \"selection\").attr(\"cursor\", cursors.selection).attr(\"fill\", \"#777\").attr(\"fill-opacity\", 0.3).attr(\"stroke\", \"#fff\").attr(\"shape-rendering\", \"crispEdges\");\n        var handle = group.selectAll(\".handle\").data(dim.handles, function(d) {\n            return d.type;\n        });\n        handle.exit().remove();\n        handle.enter().append(\"rect\").attr(\"class\", function(d) {\n            return \"handle handle--\" + d.type;\n        }).attr(\"cursor\", function(d) {\n            return cursors[d.type];\n        });\n        group.each(redraw).attr(\"fill\", \"none\").attr(\"pointer-events\", \"all\").on(\"mousedown.brush\", started).filter(touchable).on(\"touchstart.brush\", started).on(\"touchmove.brush\", touchmoved).on(\"touchend.brush touchcancel.brush\", touchended).style(\"touch-action\", \"none\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n    }\n    brush.move = function(group, selection, event) {\n        if (group.tween) {\n            group.on(\"start.brush\", function(event) {\n                emitter(this, arguments).beforestart().start(event);\n            }).on(\"interrupt.brush end.brush\", function(event) {\n                emitter(this, arguments).end(event);\n            }).tween(\"brush\", function() {\n                var that = this, state = that.__brush, emit = emitter(that, arguments), selection0 = state.selection, selection1 = dim.input(typeof selection === \"function\" ? selection.apply(this, arguments) : selection, state.extent), i = (0,d3_interpolate__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(selection0, selection1);\n                function tween(t) {\n                    state.selection = t === 1 && selection1 === null ? null : i(t);\n                    redraw.call(that);\n                    emit.brush();\n                }\n                return selection0 !== null && selection1 !== null ? tween : tween(1);\n            });\n        } else {\n            group.each(function() {\n                var that = this, args = arguments, state = that.__brush, selection1 = dim.input(typeof selection === \"function\" ? selection.apply(that, args) : selection, state.extent), emit = emitter(that, args).beforestart();\n                (0,d3_transition__WEBPACK_IMPORTED_MODULE_0__.interrupt)(that);\n                state.selection = selection1 === null ? null : selection1;\n                redraw.call(that);\n                emit.start(event).brush(event).end(event);\n            });\n        }\n    };\n    brush.clear = function(group, event) {\n        brush.move(group, null, event);\n    };\n    function redraw() {\n        var group = (0,d3_selection__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(this), selection = local(this).selection;\n        if (selection) {\n            group.selectAll(\".selection\").style(\"display\", null).attr(\"x\", selection[0][0]).attr(\"y\", selection[0][1]).attr(\"width\", selection[1][0] - selection[0][0]).attr(\"height\", selection[1][1] - selection[0][1]);\n            group.selectAll(\".handle\").style(\"display\", null).attr(\"x\", function(d) {\n                return d.type[d.type.length - 1] === \"e\" ? selection[1][0] - handleSize / 2 : selection[0][0] - handleSize / 2;\n            }).attr(\"y\", function(d) {\n                return d.type[0] === \"s\" ? selection[1][1] - handleSize / 2 : selection[0][1] - handleSize / 2;\n            }).attr(\"width\", function(d) {\n                return d.type === \"n\" || d.type === \"s\" ? selection[1][0] - selection[0][0] + handleSize : handleSize;\n            }).attr(\"height\", function(d) {\n                return d.type === \"e\" || d.type === \"w\" ? selection[1][1] - selection[0][1] + handleSize : handleSize;\n            });\n        } else {\n            group.selectAll(\".selection,.handle\").style(\"display\", \"none\").attr(\"x\", null).attr(\"y\", null).attr(\"width\", null).attr(\"height\", null);\n        }\n    }\n    function emitter(that, args, clean) {\n        var emit = that.__brush.emitter;\n        return emit && (!clean || !emit.clean) ? emit : new Emitter(that, args, clean);\n    }\n    function Emitter(that, args, clean) {\n        this.that = that;\n        this.args = args;\n        this.state = that.__brush;\n        this.active = 0;\n        this.clean = clean;\n    }\n    Emitter.prototype = {\n        beforestart: function() {\n            if (++this.active === 1) this.state.emitter = this, this.starting = true;\n            return this;\n        },\n        start: function(event, mode) {\n            if (this.starting) this.starting = false, this.emit(\"start\", event, mode);\n            else this.emit(\"brush\", event);\n            return this;\n        },\n        brush: function(event, mode) {\n            this.emit(\"brush\", event, mode);\n            return this;\n        },\n        end: function(event, mode) {\n            if (--this.active === 0) delete this.state.emitter, this.emit(\"end\", event, mode);\n            return this;\n        },\n        emit: function(type, event, mode) {\n            var d = (0,d3_selection__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(this.that).datum();\n            listeners.call(type, this.that, new _event_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"](type, {\n                sourceEvent: event,\n                target: brush,\n                selection: dim.output(this.state.selection),\n                mode,\n                dispatch: listeners\n            }), d);\n        }\n    };\n    function started(event) {\n        if (touchending && !event.touches) return;\n        if (!filter.apply(this, arguments)) return;\n        var that = this, type = event.target.__data__.type, mode = (keys && event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : keys && event.altKey ? MODE_CENTER : MODE_HANDLE, signX = dim === Y ? null : signsX[type], signY = dim === X ? null : signsY[type], state = local(that), extent = state.extent, selection = state.selection, W = extent[0][0], w0, w1, N = extent[0][1], n0, n1, E = extent[1][0], e0, e1, S = extent[1][1], s0, s1, dx = 0, dy = 0, moving, shifting = signX && signY && keys && event.shiftKey, lockX, lockY, points = Array.from(event.touches || [\n            event\n        ], (t)=>{\n            const i = t.identifier;\n            t = (0,d3_selection__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(t, that);\n            t.point0 = t.slice();\n            t.identifier = i;\n            return t;\n        });\n        (0,d3_transition__WEBPACK_IMPORTED_MODULE_0__.interrupt)(that);\n        var emit = emitter(that, arguments, true).beforestart();\n        if (type === \"overlay\") {\n            if (selection) moving = true;\n            const pts = [\n                points[0],\n                points[1] || points[0]\n            ];\n            state.selection = selection = [\n                [\n                    w0 = dim === Y ? W : min(pts[0][0], pts[1][0]),\n                    n0 = dim === X ? N : min(pts[0][1], pts[1][1])\n                ],\n                [\n                    e0 = dim === Y ? E : max(pts[0][0], pts[1][0]),\n                    s0 = dim === X ? S : max(pts[0][1], pts[1][1])\n                ]\n            ];\n            if (points.length > 1) move(event);\n        } else {\n            w0 = selection[0][0];\n            n0 = selection[0][1];\n            e0 = selection[1][0];\n            s0 = selection[1][1];\n        }\n        w1 = w0;\n        n1 = n0;\n        e1 = e0;\n        s1 = s0;\n        var group = (0,d3_selection__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(that).attr(\"pointer-events\", \"none\");\n        var overlay = group.selectAll(\".overlay\").attr(\"cursor\", cursors[type]);\n        if (event.touches) {\n            emit.moved = moved;\n            emit.ended = ended;\n        } else {\n            var view = (0,d3_selection__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(event.view).on(\"mousemove.brush\", moved, true).on(\"mouseup.brush\", ended, true);\n            if (keys) view.on(\"keydown.brush\", keydowned, true).on(\"keyup.brush\", keyupped, true);\n            (0,d3_drag__WEBPACK_IMPORTED_MODULE_8__[\"default\"])(event.view);\n        }\n        redraw.call(that);\n        emit.start(event, mode.name);\n        function moved(event) {\n            for (const p of event.changedTouches || [\n                event\n            ]){\n                for (const d of points)if (d.identifier === p.identifier) d.cur = (0,d3_selection__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(p, that);\n            }\n            if (shifting && !lockX && !lockY && points.length === 1) {\n                const point = points[0];\n                if (abs(point.cur[0] - point[0]) > abs(point.cur[1] - point[1])) lockY = true;\n                else lockX = true;\n            }\n            for (const point of points)if (point.cur) point[0] = point.cur[0], point[1] = point.cur[1];\n            moving = true;\n            (0,_noevent_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(event);\n            move(event);\n        }\n        function move(event) {\n            const point = points[0], point0 = point.point0;\n            var t;\n            dx = point[0] - point0[0];\n            dy = point[1] - point0[1];\n            switch(mode){\n                case MODE_SPACE:\n                case MODE_DRAG:\n                    {\n                        if (signX) dx = max(W - w0, min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n                        if (signY) dy = max(N - n0, min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n                        break;\n                    }\n                case MODE_HANDLE:\n                    {\n                        if (points[1]) {\n                            if (signX) w1 = max(W, min(E, points[0][0])), e1 = max(W, min(E, points[1][0])), signX = 1;\n                            if (signY) n1 = max(N, min(S, points[0][1])), s1 = max(N, min(S, points[1][1])), signY = 1;\n                        } else {\n                            if (signX < 0) dx = max(W - w0, min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n                            else if (signX > 0) dx = max(W - e0, min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n                            if (signY < 0) dy = max(N - n0, min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n                            else if (signY > 0) dy = max(N - s0, min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n                        }\n                        break;\n                    }\n                case MODE_CENTER:\n                    {\n                        if (signX) w1 = max(W, min(E, w0 - dx * signX)), e1 = max(W, min(E, e0 + dx * signX));\n                        if (signY) n1 = max(N, min(S, n0 - dy * signY)), s1 = max(N, min(S, s0 + dy * signY));\n                        break;\n                    }\n            }\n            if (e1 < w1) {\n                signX *= -1;\n                t = w0, w0 = e0, e0 = t;\n                t = w1, w1 = e1, e1 = t;\n                if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n            }\n            if (s1 < n1) {\n                signY *= -1;\n                t = n0, n0 = s0, s0 = t;\n                t = n1, n1 = s1, s1 = t;\n                if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n            }\n            if (state.selection) selection = state.selection; // May be set by brush.move!\n            if (lockX) w1 = selection[0][0], e1 = selection[1][0];\n            if (lockY) n1 = selection[0][1], s1 = selection[1][1];\n            if (selection[0][0] !== w1 || selection[0][1] !== n1 || selection[1][0] !== e1 || selection[1][1] !== s1) {\n                state.selection = [\n                    [\n                        w1,\n                        n1\n                    ],\n                    [\n                        e1,\n                        s1\n                    ]\n                ];\n                redraw.call(that);\n                emit.brush(event, mode.name);\n            }\n        }\n        function ended(event) {\n            (0,_noevent_js__WEBPACK_IMPORTED_MODULE_3__.nopropagation)(event);\n            if (event.touches) {\n                if (event.touches.length) return;\n                if (touchending) clearTimeout(touchending);\n                touchending = setTimeout(function() {\n                    touchending = null;\n                }, 500); // Ghost clicks are delayed!\n            } else {\n                (0,d3_drag__WEBPACK_IMPORTED_MODULE_8__.yesdrag)(event.view, moving);\n                view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n            }\n            group.attr(\"pointer-events\", \"all\");\n            overlay.attr(\"cursor\", cursors.overlay);\n            if (state.selection) selection = state.selection; // May be set by brush.move (on start)!\n            if (empty(selection)) state.selection = null, redraw.call(that);\n            emit.end(event, mode.name);\n        }\n        function keydowned(event) {\n            switch(event.keyCode){\n                case 16:\n                    {\n                        shifting = signX && signY;\n                        break;\n                    }\n                case 18:\n                    {\n                        if (mode === MODE_HANDLE) {\n                            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n                            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n                            mode = MODE_CENTER;\n                            move(event);\n                        }\n                        break;\n                    }\n                case 32:\n                    {\n                        if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n                            if (signX < 0) e0 = e1 - dx;\n                            else if (signX > 0) w0 = w1 - dx;\n                            if (signY < 0) s0 = s1 - dy;\n                            else if (signY > 0) n0 = n1 - dy;\n                            mode = MODE_SPACE;\n                            overlay.attr(\"cursor\", cursors.selection);\n                            move(event);\n                        }\n                        break;\n                    }\n                default:\n                    return;\n            }\n            (0,_noevent_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(event);\n        }\n        function keyupped(event) {\n            switch(event.keyCode){\n                case 16:\n                    {\n                        if (shifting) {\n                            lockX = lockY = shifting = false;\n                            move(event);\n                        }\n                        break;\n                    }\n                case 18:\n                    {\n                        if (mode === MODE_CENTER) {\n                            if (signX < 0) e0 = e1;\n                            else if (signX > 0) w0 = w1;\n                            if (signY < 0) s0 = s1;\n                            else if (signY > 0) n0 = n1;\n                            mode = MODE_HANDLE;\n                            move(event);\n                        }\n                        break;\n                    }\n                case 32:\n                    {\n                        if (mode === MODE_SPACE) {\n                            if (event.altKey) {\n                                if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n                                if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n                                mode = MODE_CENTER;\n                            } else {\n                                if (signX < 0) e0 = e1;\n                                else if (signX > 0) w0 = w1;\n                                if (signY < 0) s0 = s1;\n                                else if (signY > 0) n0 = n1;\n                                mode = MODE_HANDLE;\n                            }\n                            overlay.attr(\"cursor\", cursors[type]);\n                            move(event);\n                        }\n                        break;\n                    }\n                default:\n                    return;\n            }\n            (0,_noevent_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(event);\n        }\n    }\n    function touchmoved(event) {\n        emitter(this, arguments).moved(event);\n    }\n    function touchended(event) {\n        emitter(this, arguments).ended(event);\n    }\n    function initialize() {\n        var state = this.__brush || {\n            selection: null\n        };\n        state.extent = number2(extent.apply(this, arguments));\n        state.dim = dim;\n        return state;\n    }\n    brush.extent = function(_) {\n        return arguments.length ? (extent = typeof _ === \"function\" ? _ : (0,_constant_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(number2(_)), brush) : extent;\n    };\n    brush.filter = function(_) {\n        return arguments.length ? (filter = typeof _ === \"function\" ? _ : (0,_constant_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(!!_), brush) : filter;\n    };\n    brush.touchable = function(_) {\n        return arguments.length ? (touchable = typeof _ === \"function\" ? _ : (0,_constant_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(!!_), brush) : touchable;\n    };\n    brush.handleSize = function(_) {\n        return arguments.length ? (handleSize = +_, brush) : handleSize;\n    };\n    brush.keyModifiers = function(_) {\n        return arguments.length ? (keys = !!_, brush) : keys;\n    };\n    brush.on = function() {\n        var value = listeners.on.apply(listeners, arguments);\n        return value === listeners ? brush : value;\n    };\n    return brush;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/d3-brush/src/brush.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/d3-brush/src/constant.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-brush/src/constant.js ***!
  \***********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((x)=>()=>x);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvZDMtYnJ1c2gvc3JjL2NvbnN0YW50LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxpRUFBZUEsQ0FBQUEsSUFBSyxJQUFNQSxDQUFBQSxFQUFFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8va3ViZXJuZWF0LW5leHQtYXBwLy4vbm9kZV9tb2R1bGVzL2QzLWJydXNoL3NyYy9jb25zdGFudC5qcz83YTA5Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IHggPT4gKCkgPT4geDtcbiJdLCJuYW1lcyI6WyJ4Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/d3-brush/src/constant.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/d3-brush/src/event.js":
/*!********************************************!*\
  !*** ./node_modules/d3-brush/src/event.js ***!
  \********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ BrushEvent)\n/* harmony export */ });\nfunction BrushEvent(type, { sourceEvent, target, selection, mode, dispatch }) {\n    Object.defineProperties(this, {\n        type: {\n            value: type,\n            enumerable: true,\n            configurable: true\n        },\n        sourceEvent: {\n            value: sourceEvent,\n            enumerable: true,\n            configurable: true\n        },\n        target: {\n            value: target,\n            enumerable: true,\n            configurable: true\n        },\n        selection: {\n            value: selection,\n            enumerable: true,\n            configurable: true\n        },\n        mode: {\n            value: mode,\n            enumerable: true,\n            configurable: true\n        },\n        _: {\n            value: dispatch\n        }\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvZDMtYnJ1c2gvc3JjL2V2ZW50LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBZSxTQUFTQSxXQUFXQyxJQUFJLEVBQUUsRUFDdkNDLFdBQVcsRUFDWEMsTUFBTSxFQUNOQyxTQUFTLEVBQ1RDLElBQUksRUFDSkMsUUFBUSxFQUNUO0lBQ0NDLE9BQU9DLGdCQUFnQixDQUFDLElBQUksRUFBRTtRQUM1QlAsTUFBTTtZQUFDUSxPQUFPUjtZQUFNUyxZQUFZO1lBQU1DLGNBQWM7UUFBSTtRQUN4RFQsYUFBYTtZQUFDTyxPQUFPUDtZQUFhUSxZQUFZO1lBQU1DLGNBQWM7UUFBSTtRQUN0RVIsUUFBUTtZQUFDTSxPQUFPTjtZQUFRTyxZQUFZO1lBQU1DLGNBQWM7UUFBSTtRQUM1RFAsV0FBVztZQUFDSyxPQUFPTDtZQUFXTSxZQUFZO1lBQU1DLGNBQWM7UUFBSTtRQUNsRU4sTUFBTTtZQUFDSSxPQUFPSjtZQUFNSyxZQUFZO1lBQU1DLGNBQWM7UUFBSTtRQUN4REMsR0FBRztZQUFDSCxPQUFPSDtRQUFRO0lBQ3JCO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9rdWJlcm5lYXQtbmV4dC1hcHAvLi9ub2RlX21vZHVsZXMvZDMtYnJ1c2gvc3JjL2V2ZW50LmpzPzBhNTgiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gQnJ1c2hFdmVudCh0eXBlLCB7XG4gIHNvdXJjZUV2ZW50LFxuICB0YXJnZXQsXG4gIHNlbGVjdGlvbixcbiAgbW9kZSxcbiAgZGlzcGF0Y2hcbn0pIHtcbiAgT2JqZWN0LmRlZmluZVByb3BlcnRpZXModGhpcywge1xuICAgIHR5cGU6IHt2YWx1ZTogdHlwZSwgZW51bWVyYWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlfSxcbiAgICBzb3VyY2VFdmVudDoge3ZhbHVlOiBzb3VyY2VFdmVudCwgZW51bWVyYWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlfSxcbiAgICB0YXJnZXQ6IHt2YWx1ZTogdGFyZ2V0LCBlbnVtZXJhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWV9LFxuICAgIHNlbGVjdGlvbjoge3ZhbHVlOiBzZWxlY3Rpb24sIGVudW1lcmFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZX0sXG4gICAgbW9kZToge3ZhbHVlOiBtb2RlLCBlbnVtZXJhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWV9LFxuICAgIF86IHt2YWx1ZTogZGlzcGF0Y2h9XG4gIH0pO1xufVxuIl0sIm5hbWVzIjpbIkJydXNoRXZlbnQiLCJ0eXBlIiwic291cmNlRXZlbnQiLCJ0YXJnZXQiLCJzZWxlY3Rpb24iLCJtb2RlIiwiZGlzcGF0Y2giLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0aWVzIiwidmFsdWUiLCJlbnVtZXJhYmxlIiwiY29uZmlndXJhYmxlIiwiXyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/d3-brush/src/event.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/d3-brush/src/index.js":
/*!********************************************!*\
  !*** ./node_modules/d3-brush/src/index.js ***!
  \********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   brush: () => (/* reexport safe */ _brush_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]),\n/* harmony export */   brushSelection: () => (/* reexport safe */ _brush_js__WEBPACK_IMPORTED_MODULE_0__.brushSelection),\n/* harmony export */   brushX: () => (/* reexport safe */ _brush_js__WEBPACK_IMPORTED_MODULE_0__.brushX),\n/* harmony export */   brushY: () => (/* reexport safe */ _brush_js__WEBPACK_IMPORTED_MODULE_0__.brushY)\n/* harmony export */ });\n/* harmony import */ var _brush_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./brush.js */ \"(ssr)/./node_modules/d3-brush/src/brush.js\");\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvZDMtYnJ1c2gvc3JjL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBS29CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8va3ViZXJuZWF0LW5leHQtYXBwLy4vbm9kZV9tb2R1bGVzL2QzLWJydXNoL3NyYy9pbmRleC5qcz9jMTk3Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7XG4gIGRlZmF1bHQgYXMgYnJ1c2gsXG4gIGJydXNoWCxcbiAgYnJ1c2hZLFxuICBicnVzaFNlbGVjdGlvblxufSBmcm9tIFwiLi9icnVzaC5qc1wiO1xuIl0sIm5hbWVzIjpbImRlZmF1bHQiLCJicnVzaCIsImJydXNoWCIsImJydXNoWSIsImJydXNoU2VsZWN0aW9uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/d3-brush/src/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/d3-brush/src/noevent.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-brush/src/noevent.js ***!
  \**********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   nopropagation: () => (/* binding */ nopropagation)\n/* harmony export */ });\nfunction nopropagation(event) {\n    event.stopImmediatePropagation();\n}\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(event) {\n    event.preventDefault();\n    event.stopImmediatePropagation();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvZDMtYnJ1c2gvc3JjL25vZXZlbnQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBTyxTQUFTQSxjQUFjQyxLQUFLO0lBQ2pDQSxNQUFNQyx3QkFBd0I7QUFDaEM7QUFFQSw2QkFBZSxvQ0FBU0QsS0FBSztJQUMzQkEsTUFBTUUsY0FBYztJQUNwQkYsTUFBTUMsd0JBQXdCO0FBQ2hDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8va3ViZXJuZWF0LW5leHQtYXBwLy4vbm9kZV9tb2R1bGVzL2QzLWJydXNoL3NyYy9ub2V2ZW50LmpzPzk5NzgiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIG5vcHJvcGFnYXRpb24oZXZlbnQpIHtcbiAgZXZlbnQuc3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uKCk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGV2ZW50KSB7XG4gIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gIGV2ZW50LnN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbigpO1xufVxuIl0sIm5hbWVzIjpbIm5vcHJvcGFnYXRpb24iLCJldmVudCIsInN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbiIsInByZXZlbnREZWZhdWx0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/d3-brush/src/noevent.js\n");

/***/ })

};
;